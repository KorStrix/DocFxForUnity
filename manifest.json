{
  "sitemap": {
    "fileOptions": {
      "api/*": {
        "baseUrl": "https://normanderwan.github.io/DocFxForUnity/",
        "changefreq": "daily"
      }
    },
    "baseUrl": "https://normanderwan.github.io/DocFxForUnity/",
    "changefreq": "weekly"
  },
  "homepages": [],
  "source_base_path": "D:/a/DocFxForUnity/DocFxForUnity/Documentation",
  "xrefmap": "xrefmap.yml",
  "files": [
    {
      "type": "Resource",
      "output": {
        "resource": {
          "relative_path": "index.json"
        }
      },
      "is_incremental": false
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/DocFxForUnity.Player.yml",
      "output": {
        ".html": {
          "relative_path": "api/DocFxForUnity.Player.html",
          "hash": "OXZ9DLMuauoUCgkOo/DeVw=="
        }
      },
      "is_incremental": false,
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/DocFxForUnity.XrefMap.yml",
      "output": {
        ".html": {
          "relative_path": "api/DocFxForUnity.XrefMap.html",
          "hash": "pL8/f/1HQt+OpQyqbwOg/Q=="
        }
      },
      "is_incremental": false,
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/DocFxForUnity.XrefMapReference.yml",
      "output": {
        ".html": {
          "relative_path": "api/DocFxForUnity.XrefMapReference.html",
          "hash": "lv20/GieISPAa80ZEkzs0g=="
        }
      },
      "is_incremental": false,
      "version": ""
    },
    {
      "type": "ManagedReference",
      "source_relative_path": "api/DocFxForUnity.yml",
      "output": {
        ".html": {
          "relative_path": "api/DocFxForUnity.html",
          "hash": "gX8mv+oB4aBgx2rWMybEGQ=="
        }
      },
      "is_incremental": false,
      "version": ""
    },
    {
      "type": "Toc",
      "source_relative_path": "api/toc.yml",
      "output": {
        ".html": {
          "relative_path": "api/toc.html",
          "hash": "/0vY+Iy9/ytFF79N80kLPA=="
        }
      },
      "is_incremental": false,
      "version": ""
    },
    {
      "type": "Conceptual",
      "source_relative_path": "index.md",
      "output": {
        ".html": {
          "relative_path": "index.html",
          "hash": "sN+OGbo25DZrtOTRFYZ3Kw=="
        }
      },
      "is_incremental": false,
      "version": ""
    },
    {
      "type": "Conceptual",
      "source_relative_path": "manual/coniunctis.md",
      "output": {
        ".html": {
          "relative_path": "manual/coniunctis.html",
          "hash": "acBvvxvn1F2QtB37RjefYA=="
        }
      },
      "is_incremental": false,
      "version": ""
    },
    {
      "type": "Conceptual",
      "source_relative_path": "manual/etiam.md",
      "output": {
        ".html": {
          "relative_path": "manual/etiam.html",
          "hash": "Elzf6tgzGL+JCh/mpMiLig=="
        }
      },
      "is_incremental": false,
      "version": ""
    },
    {
      "type": "Toc",
      "source_relative_path": "manual/toc.yml",
      "output": {
        ".html": {
          "relative_path": "manual/toc.html",
          "hash": "2q0qq03gpYNjYV8lSAAcVw=="
        }
      },
      "is_incremental": false,
      "version": ""
    },
    {
      "type": "Resource",
      "source_relative_path": "resources/ExampleManual.png",
      "output": {
        "resource": {
          "relative_path": "resources/ExampleManual.png"
        }
      },
      "is_incremental": false,
      "version": ""
    },
    {
      "type": "Resource",
      "source_relative_path": "resources/ExampleScriptingApi.png",
      "output": {
        "resource": {
          "relative_path": "resources/ExampleScriptingApi.png"
        }
      },
      "is_incremental": false,
      "version": ""
    },
    {
      "type": "Toc",
      "source_relative_path": "toc.yml",
      "output": {
        ".html": {
          "relative_path": "toc.html",
          "hash": "I9b2ybi7z1lOzWh8k3/LTw=="
        }
      },
      "is_incremental": false,
      "version": ""
    }
  ],
  "incremental_info": [
    {
      "status": {
        "can_incremental": false,
        "details": "Cannot build incrementally because last build info is missing.",
        "incrementalPhase": "build",
        "total_file_count": 0,
        "skipped_file_count": 0,
        "full_build_reason_code": "NoAvailableBuildCache"
      },
      "processors": {
        "TocDocumentProcessor": {
          "can_incremental": false,
          "details": "Processor TocDocumentProcessor cannot support incremental build because the processor doesn't implement ISupportIncrementalDocumentProcessor interface.",
          "incrementalPhase": "build",
          "total_file_count": 0,
          "skipped_file_count": 0
        },
        "ConceptualDocumentProcessor": {
          "can_incremental": false,
          "incrementalPhase": "build",
          "total_file_count": 3,
          "skipped_file_count": 0
        },
        "ResourceDocumentProcessor": {
          "can_incremental": false,
          "details": "Processor ResourceDocumentProcessor cannot support incremental build because the processor doesn't implement ISupportIncrementalDocumentProcessor interface.",
          "incrementalPhase": "build",
          "total_file_count": 0,
          "skipped_file_count": 0
        },
        "ManagedReferenceDocumentProcessor": {
          "can_incremental": false,
          "incrementalPhase": "build",
          "total_file_count": 4,
          "skipped_file_count": 0
        }
      }
    },
    {
      "status": {
        "can_incremental": false,
        "details": "Cannot support incremental post processing, the reason is: should not trace intermediate info.",
        "incrementalPhase": "postProcessing",
        "total_file_count": 0,
        "skipped_file_count": 0
      },
      "processors": {}
    }
  ],
  "version_info": {},
  "groups": [
    {
      "xrefmap": "xrefmap.yml"
    }
  ]
}